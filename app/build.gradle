apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.versions["compileSdkVersion"]
    defaultConfig {
        applicationId rootProject.ext.versions["applicationId"]
        minSdkVersion rootProject.ext.versions["minSdkVersion"]
        targetSdkVersion rootProject.ext.versions["targetSdkVersion"]
        versionCode rootProject.ext.versions["versionCode"]
        versionName rootProject.ext.versions["versionName"]
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
        ndk {
            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86"
        }
        multiDexEnabled true
    }
    signingConfigs {
        release {
            v1SigningEnabled true
            v2SigningEnabled true
            storeFile file('..\\st-keystore.jks')
            keyAlias 'st'
            keyPassword 'st123456'
            storePassword 'st123456'
        }
        debug {
            v1SigningEnabled true
            v2SigningEnabled true
            storeFile file('..\\st-keystore.jks')
            keyAlias 'st'
            keyPassword 'st123456'
            storePassword 'st123456'
        }
    }
    buildTypes {
        debug {
            debuggable true
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            pseudoLocalesEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/beans.xml'
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.1.0'
    //implementation 'androidx.appcompat:appcompat:1.3.0-alpha01'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    annotationProcessor rootProject.ext.dependencies["arouter_compiler"]
    kapt rootProject.ext.dependencies["arouter_compiler"]
    implementation project(':module_base')


    //测试框架
    androidTestImplementation rootProject.ext.dependencies["runner"]
    androidTestImplementation rootProject.ext.dependencies["espresso_core"]
    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation('com.android.support.test:runner:0.2') {
        exclude module: 'support-annotations'
    }
    androidTestImplementation('com.android.support.test:rules:0.2') {
        exclude module: 'support-annotations'
    }
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.1') {
        exclude module: 'support-annotations'
    }

    androidTestImplementation('com.android.support.test.espresso:espresso-contrib:2.0') {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
        exclude module: 'support-annotations'
    }

    androidTestImplementation('com.android.support.test.espresso:espresso-intents:2.2.2') {
        exclude module: 'support-annotations'
    }

    //测试谷歌新的MergeAdapter
    implementation 'androidx.recyclerview:recyclerview:1.2.0-alpha04'
}
